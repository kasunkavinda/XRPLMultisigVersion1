/// <reference types="node" />
import { verify } from "ripple-keypairs";
declare function bytesToHex(a: number[]): string;
declare function deriveAddressWithEdPrefixer(publicKey: string): string;
declare function hexToBytes(a: string): number[];
declare function bufferToHext(buffer: Buffer): string;
declare function getAlgorithmFromKey(key: string): "ed25519" | "secp256k1";
declare function isValidClassicAddress(address: string): boolean;
declare function isValidAddress(address: string): boolean;
declare function isValidSeed(seed: string): boolean;
declare function isValidMnemnic(words: string): boolean;
declare function compressPubKey(pubkey: string): string;
declare function hash(hex: string): number[];
declare function encodeTransaction(TxJson: Record<string, unknown>, MultiSignAccount?: string): string;
declare function secp256k1_p1363ToFullyCanonicalDerSignature(p1363Signature: string): string;
export { bytesToHex, hexToBytes, bufferToHext, getAlgorithmFromKey, isValidAddress, isValidClassicAddress, isValidSeed, isValidMnemnic, deriveAddressWithEdPrefixer as deriveAddress, compressPubKey, hash, encodeTransaction, secp256k1_p1363ToFullyCanonicalDerSignature, verify as verifySignature, };
